<Window x:Class="ImageProcessing.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageProcessing"
        xmlns:vm="clr-namespace:ImageProcessing.ViewModel"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        mc:Ignorable="d"
        Title="ImageProcessing" Height="450" Width="800"
        AllowDrop="True"       
        >
    <!--VMにバインディングする-->
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <!--回転ボタン配置-->
        <Grid Margin="0,0,0,369" Background="Aquamarine">
            <Button Content="{Binding Path=RightRotate90ButtonName}" HorizontalAlignment="Left" Margin="90,10,0,0" VerticalAlignment="Top" Width="75" 
                    Command="{Binding RightRotateCommand}" />
            <Button Content="{Binding Path=LeftRotate90ButtonName}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="75"
                    Command="{Binding LeftRotateCommand}" />

        </Grid>
        <!--クリックイベントを拾いたいのでグリッドで括る-->
        <!--透明背景を設定しておく-->
        <Grid Background="Transparent" Margin="0,50,0,0">
            <!--ドロップされたファイルの処理-->
            <!--ファイル情報を有するプロパティを指定-->
            <!--dd:DragDrop.DropHandler="{Binding}でvmへのバインディングを指定-->
            <ListBox
             ItemsSource="{Binding Path=Files}"
             dd:DragDrop.IsDropTarget="True"
             dd:DragDrop.DropHandler="{Binding}" 
             >
                <!--画面に表示するファイルパスを有するプロパティを指定-->
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ContentControl>
                            <StackPanel>
                                <TextBlock Text="{Binding FilePath}" />
                                <!--クリック時のイベントを拾いたいのでボタンにして画像を表示する-->
                                <!--RelativeSourceでFilesの一つ上のwindow.DataContextを指定しWriteableBitmapCommandにつなげる-->
                                <Button Background="Transparent" BorderBrush="Transparent" Foreground="Transparent"
                                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.WriteableBitmapCommand}">
                                    <!--表示する画像はFiles.ImageData-->
                                    <Image Source="{Binding Path=ImageData}" />
                                </Button>
                            </StackPanel>
                            <i:Interaction.Triggers>

                            </i:Interaction.Triggers>
                        </ContentControl>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</Window>
